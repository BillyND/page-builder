import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../globals.css";
import { ClerkProvider } from "@clerk/nextjs";
import LocaleProvider from "../components/providers/LocaleProvider";
import Header from "../components/header/Header";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return [{ locale: "en" }, { locale: "vi" }];
}

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string };
}>) {
  // Properly await the params object before accessing its properties
  const resolvedParams = await Promise.resolve(params);
  const locale = resolvedParams?.locale || "en";

  // Use a try-catch block to handle potential import errors
  let messages;
  try {
    messages = (await import(`../../messages/${locale}/index.json`)).default;
  } catch {
    // Fallback to English if there's an error loading the messages
    messages = (await import(`../../messages/en/index.json`)).default;
  }

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ClerkProvider>
          <LocaleProvider locale={locale} messages={messages}>
            <Header />
            <main>{children}</main>
          </LocaleProvider>
        </ClerkProvider>
      </body>
    </html>
  );
}
